name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
      - uses: actions/checkout@v4

      - name: Download Kaizen
        run: |
          mkdir -p ${{ github.workspace }}/external
          wget -O ${{ github.workspace }}/external/kaizen.h \
               https://github.com/heinsaar/kaizen/releases/download/0.1.0/kaizen.h

      - name: List files
        run: ls -R ${{ github.workspace }}

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DCMAKE_CXX_FLAGS="-I${{ github.workspace }}/external"
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

      - name: Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ctest --build-config ${{ matrix.build_type }}
        
      - name: Run Benchmark Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: |
          echo "Running benchmark tests..."
          ./matrix_benchmark --size 3000 --iterations 10 > benchmark_output.txt
          echo "Benchmark output:"
          cat benchmark_output.txt

      - name: Verify Benchmark Output
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: |
          # Compare the produced output to an expected output file.
          # If you don't have an expected file, you can remove this step.
          if [ -f expected_benchmark_output.txt ]; then
            diff benchmark_output.txt expected_benchmark_output.txt || echo "Benchmark output differs from expected."
          else
            echo "No expected output file found. Skipping output verification."
          fi
